def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.vaguenone.biotogo"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }
//    keytool -exportcert -alias "applipiewoo" -storepass "applipiewoo" -keystore "/Users/applipie/EnvatoProject/WooComm/CodeFWooCommerce/android/app/keystore.jks" | openssl sha1 -binary | openssl base64
    signingConfigs {
        release {
            keyAlias 'applipiewoo'
            keyPassword 'applipiewoo'
            storeFile file('keystore.jks')
            storePassword 'applipiewoo'
        }
        debug {
            keyAlias 'applipiewoo'
            keyPassword 'applipiewoo'
            storeFile file('keystore.jks')
            storePassword 'applipiewoo'
        }
    }
    configurations {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}

rootProject.ext {
    set('FlutterFire', [
            FirebaseSDKVersion: '25.12.0'
    ])
}
flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'io.card:android-sdk:5.+'
}

apply plugin: 'com.google.gms.google-services'